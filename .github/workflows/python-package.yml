name: Python package CI

on:
  push:
    branches: [ "master", "main" ]
  pull_request:
    branches: [ "master", "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        os: [ubuntu-latest]
        # Add Windows if needed
        # os: [ubuntu-latest, windows-latest]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        
    - name: Install system dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y --no-install-recommends \
            libgl1 \
            libglu1-mesa \
            libgles2 \
            libegl1 \
            xvfb \
            mesa-utils \
            mesa-utils-extra
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pip
          ~/.cache/Open3D
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-
    
    - name: Install package and test dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install -e .
        python -m pip install pytest pytest-cov pytest-xdist flake8 mypy
        
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Static type checking with mypy
      run: |
        mypy --install-types --non-interactive tactopro/
        
    - name: Run tests
      env:
        PYOPENGL_PLATFORM: egl
        DISPLAY: :99
      run: |
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        sleep 3
        python -m pytest -n auto --cov=./ --cov-report=xml
        
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      if: success()